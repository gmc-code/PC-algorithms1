IN PROGRESS


==========================
Test and trace
==========================


a = 5;
b = 7;
c = 3;
Given the values of the variables above, what does the function return?
def comparison()
    If (a > c) or (b > c)
        return True
    Else
        return False
    EndIf

-----------------------------------------------

The following algorithm has been written.
Begin
    Input score
        If score > 75 Then
            If score >= 85 Then
                grade = “A”
            Else
                grade = “B”
            EndIf
        Else
            grade = “C”
        EndIf
    output grade
End


The algorithm needs to be tested for logic errors.
Which of the following sets of test data would provide the best test for the algorithm?
A. 0, 75, 80, 84, 100
B. 75, 76, 84, 85
C. 70, 75, 76, 80
D. 0, 74, 84, 85

-----------------------------------------------
1 x ←  4
2 Do
3 y ←  x + 10
4 If (x < 8) Then
5 x ←  x + 1
6 EndIf
7 While (y < 15)
8 print x,y


What is the output generated by the pseudocode above?




Purpose of 
Begin
    Total ← 0
    For i = 0 to len(nums)
        If nums[i] >= 10 then
            Total ← Total + nums[i]
        EndIf
    EndFor
    Display “the value of Total is” Total
End


---------------------------------------------------

Speed test
-------------------------------

The algorithm  will work properly only for speeds greater than 1 km/h
and less than 30 km/h.
 check that the speed meets this range.

Begin
    ValidSpeed ← False
    If Speed >= 1 And Speed <= 30 Then
        ValidSpeed ← True
    EndIf
End


---------------------------------------------------
a ←  [5, 6, 7, 8]
total ←  0
For i ←  0 to End of a
total ←  total + a[i]
Next
print total
Which trace table is representative of the algorithm above immediately after the loop is executed for the
second time?



Array changes
-------------------------------

The pseudocode below will take the current values in the array and then write the new values into the array.
Begin
    Array[] = [3, 5, 0, 0, 0] //Initialise the array, index starts at 1
    A ← Array[1]
    B ← Array[2]
    While B < 3 * A
        C ← A * B
        A ← A - 1
        B ← B + 2
    EndWhile
    //Write new values into the array
    Array[1] = A
    Array[2] = B
    Array[3] = C
End

D. Array = [2, 7, 15, 0, 0]

--------------------------------------

Test Average
-------------------
Genna has designed a function to be incorporated into a software solution to record test scores for a class.
The function is called Average_mark.
The marks are entered into an array called classmarks. Classmarks can hold up to a maximum of 30 student
test scores. The index number of the fi rst element is 0.
Each year the number of students in the class will change, so Genna needs to allow for a range of up to 30
students in the class.
The algorithm is shown below.
Function Average_mark(classmarks, class_size)
count ← 0
sum ← 0
avemark ← 0
While count < class_size
sum ← sum + classmarks[count]
count = count + 1
EndWhile
avemark = sum / class_size
return avemark
End Function
In the space provided below, construct a trace table for a class of three students to check that the function
meets the design specifi cations. The students have the following results: 52, 89, 21.

Classsize
Count
Sum
Avemark
WHILE loop
3
0
0
0
T
1
52
0
T
2
141
0
T
3
162
0
F
162/3=54




